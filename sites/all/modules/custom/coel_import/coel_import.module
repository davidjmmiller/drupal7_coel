<?php

/**
 * @file
 * Module file for page_example_module.
 */

/**
 * @defgroup page_example Example: Page
 * @ingroup examples
 * @{
 * This example demonstrates how a module can display a page at a given URL.
 *
 * It's important to understand how the menu system works in order to
 * implement your own pages. See the Menu Example module for some insight.
 *
 * @see menu_example
 */

/**
 * Implements hook_help().
 *
 * Through hook_help(), a module can make documentation available to the user
 * for the module as a whole or for specific paths. Where the help appears
 * depends on the $path specified.
 *
 * In the first example below, the help text will appear on the simple page
 * defined in hook_menu below in the region designated for help text.
 *
 * In the second example, the text will be available through the module page as
 * a link beside the module or on the admin help page (admin/help) in the list
 * of help topics using the name of the module. To specify help in the admin
 * section use the module name in the path as in the second case below.
 *
 * @see hook_help()
 */
function coel_import_help($path, $arg) {
  switch ($path) {
    case 'examples/page_example/simple':
      // Help text for the simple page registered for this path.
      return t('This is help text for the simple page.');

    case 'admin/help#page_example':
      // Help text for the admin section, using the module name in the path.
      return t("This is help text created in the page example's second case.");
  }
}

/**
 * Implements hook_permission().
 *
 * Since the access to our new custom pages will be granted based on
 * special permissions, we need to define what those permissions are here.
 * This ensures that they are available to enable on the user role
 * administration pages.
 */
function coel_import_permission() {
  return array(
    'import xlsx file' => array(
       'title' => t('Imports a XSLX file for COEL'),
       'description' => t('Imports and generate the vouchers from a XLSX file to PDF '),
    ),
    'send emails pdf' => array(
        'title' => t('Send mails for all the records imported'),
        'description' => t('It takes all the records imported by the XLSX file and send emails with the receipts attached in PDF'),
    ),

  );
}

/**
 * Implements hook_menu().
 *
 * Because hook_menu() registers URL paths for items defined by the function, it
 * is necessary for modules that create pages. Each item can also specify a
 * callback function for a given URL. The menu items returned here provide this
 * information to the menu system.
 *
 * We will define some menus, and their paths will be interpreted as follows:
 *
 * If the user accesses http://example.com/?q=examples/page_example/simple,
 * the menu system will first look for a menu item with that path. In this case
 * it will find a match, and execute page_example_simple().
 *
 * If the user accesses http://example.com/?q=examples/page_example/arguments,
 * the menu system will find no explicit match, and will fall back to the
 * closest match, 'examples/page_example', executing page_example_description().
 *
 * If the user accesses
 * http://example.com/?q=examples/page_example/arguments/1/2, the menu
 * system will first look for examples/page_example/arguments/1/2. Not finding
 * a match, it will look for examples/page_example/arguments/1/%. Again not
 * finding a match, it will look for examples/page_example/arguments/%/2.
 * Yet again not finding a match, it will look for
 * examples/page_example/arguments/%/%. This time it finds a match, and so will
 * execute page_example_arguments(1, 2). Since the parameters are passed to
 * the function after the match, the function can do additional checking or
 * make use of them before executing the callback function.
 *
 * @see hook_menu()
 * @see menu_example
 */
function coel_import_menu() {

  // This is the minimum information you can provide for a menu item. This menu
  // item will be created in the default menu, usually Navigation.
  $items['coel/import'] = array(
    'title' => 'ImportaciÃ³n de comprobantes',
    'page callback' => 'coel_import_files',
    //'access callback' => TRUE,
    'expanded' => TRUE,
    'access arguments' => array('import xlsx file'),
    //'file' => 'tcpdf.pages.inc'
  );

  $items['coel/send'] = array(
    'title' => 'Enviar comprobantes por correo',
    'page callback' => 'coel_import_send',
    //'access callback' => TRUE,
    'expanded' => TRUE,
    'access arguments' => array('send emails pdf'),
    //'file' => 'tcpdf.pages.inc'
    //'access arguments' => array('access coel send'),
  );

  // By using the MENU_CALLBACK type, we can register the callback for this
  // path without the item appearing in the menu; the admin cannot enable the
  // item in the menu, either.
  //
  // Notice that 'page arguments' is an array of numbers. These will be
  // replaced with the corresponding parts of the menu path. In this case a 0
  // would be replaced by 'examples', a 1 by 'page_example', and a 2 by
  // 'arguments.' 3 and 4 will be replaced by whatever the user provides.
  // These will be passed as arguments to the page_example_arguments() function.
  $items['coel/send/%'] = array(
    'page callback' => 'coel_import_send_mail',
    'page arguments' => array(2),
    'access arguments' => array('send emails pdf'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Constructs a descriptive page.
 *
 * Our menu maps this function to the path 'examples/page_example'.
 */
function coel_import_files() {


  if (!isset($_POST["periodo"])) {
    return array(
      '#markup' => '<p>Por favor seleccione el archivo a importar ('.variable_get('file_public_path', conf_path() . '/files').')</p>
          <form action="" method="post" enctype="multipart/form-data">
            <label>Periodo: <input type="text" required size="60" name="periodo" placeholder="Digite el periodo de los comprobantes que se va a cargar"></label><br>
            <label>Archivo: <input type="file" required name="archivo" ></label>
            <input type="submit" value="Subir archivo">
          </form>
    ');
  }
  else {
    $uploads_dir = variable_get('file_public_path', conf_path() . '/files');
    $tmp_name = $_FILES["archivo"]["tmp_name"];
    $name = 'comp-'.date('YmdHis').'.xlsx';
    $filename = "$uploads_dir/$name";
    move_uploaded_file($tmp_name, $filename);

    // Parsing files
    // If you need to parse XLS files, include php-excel-reader
    require('spreadsheet-reader-0.5.11/php-excel-reader/excel_reader2.php');

    require('spreadsheet-reader-0.5.11/SpreadsheetReader.php');

    $Reader = new SpreadsheetReader($filename);
    $Reader->ChangeSheet(0);
    $first_line = true;

    // Registrando periodo en la base de datos
    db_query('insert into coel_periodo SET nombre = :nombre',array(':nombre'=>$_POST['periodo']));
    $last_insert_id = Database::getConnection()->lastInsertId();

    // Creando sistema de archivos
    $path_comprobantes = $uploads_dir.'/comprobantes';
    $path_periodo = $uploads_dir.'/comprobantes/'.$last_insert_id;

    // Creando la estructura de directorios
    if (!file_exists($path_comprobantes)){
        // echo $path_comprobantes.' no existe<br>';
        mkdir($path_comprobantes,0777,true);
    }
    // echo $path_comprobantes.' si existe<br>';
    mkdir($path_periodo,0777,true);


    // Leyendo la primer hoja del Excel
    foreach ($Reader as $row)
    {
      // Omitir leer el encabezado del archivo
      if ($first_line) {
        $first_line = false;
        continue;
      }

        // Mapa de campos
        $line = new \stdClass;
        $line->primer_apellido = $row[1];
        $line->segundo_apellido = $row[2];
        $line->nombre = $row[3];
        $line->cedula = $row[4];
        $line->correo_electronico = $row[5];
        $line->salario_base_quincenal = $row[6];
        $line->dias_laborados = $row[7];
        $line->total_salario = $row[8];
        $line->ccss = $row[10];
        $line->prestamo = $row[11];
        $line->adelanto_salario = $row[12];
        $line->embargos = $row[13];
        $line->total_pagado = $row[14];


        if ($line->total_pagado == ''){
            continue;
        }




        // Parametros base de datos
        $map = array(
            ':coel_periodo_id' => $last_insert_id,
            ':primer_apellido' => $line->primer_apellido,
            ':segundo_apellido' => $line->segundo_apellido,
            ':nombre' => $line->nombre,
            ':cedula' => $line->cedula,
            ':correo_electronico' => $line->correo_electronico,
            ':salario_base_quincenal' => $line->salario_base_quincenal,
            ':dias_laborados' => $line->dias_laborados,
            ':total_salario' => $line->total_salario,
            ':ccss' => $line->ccss,
            ':prestamo' => $line->prestamo,
            ':adelanto_salario' => $line->adelanto_salario,
            ':embargos' => $line->embargos,
            ':total_pagado' => $line->total_pagado,
            ':tipo_comprobante' => 1,
            ':estado' => 1
        );  // $map

        $sql = 'INSERT INTO coel_periodo_detalle SET
          coel_periodo_id = :coel_periodo_id,
          primer_apellido = :primer_apellido,
          segundo_apellido = :segundo_apellido,
          nombre = :nombre,
          cedula = :cedula,
          correo_electronico = :correo_electronico,
          salario_base_quincenal = :salario_base_quincenal,
          dias_laborados = :dias_laborados,
          total_salario = :total_salario,
          ccss = :ccss,
          prestamo = :prestamo,
          adelanto_salario = :adelanto_salario,
          embargos = :embargos,
          total_pagado = :total_pagado,

          tipo_comprobante = :tipo_comprobante,
          estado = :estado';

        db_query($sql,$map);
        $id_empleado = Database::getConnection()->lastInsertId();

        // Generando PDF con el comprobante
        $path_empleado = $path_periodo.'/'.$id_empleado;
        mkdir($path_empleado);

        // escribiendo el PDF generado
        file_put_contents($path_empleado.'/comprobante-pago.pdf',coel_import_comprobante_pdf(0, $line));


      //print_r($row);
    }

      // Leyendo la segunda hoja de calculo
      $Reader->ChangeSheet(1);
      $first_line = true;
      foreach ($Reader as $row)
      {
          if ($first_line) {
              $first_line = false;
              continue;
          }

          // Mapa de campos
          $line = new \stdClass;
          $line->primer_apellido = $row[1];
          $line->segundo_apellido = $row[2];
          $line->nombre = $row[3];
          $line->cedula = $row[4];
          $line->correo_electronico = $row[5];
          $line->salario_base_quincenal = $row[6];
          $line->horas_extra = $row[7];
          $line->feriados = $row[8];
          $line->ccss_extraordinario = $row[10];
          $line->total_pagado_extraordinario = $row[11];

          if ($line->total_pagado_extraordinario == ''){
              continue;
          }


          $map = array(
              ':coel_periodo_id' => $last_insert_id,
              ':primer_apellido' => $line->primer_apellido,
              ':segundo_apellido' => $line->segundo_apellido,
              ':nombre' => $line->nombre,
              ':cedula' => $line->cedula,
              ':correo_electronico' => $line->correo_electronico,
              ':salario_base_quincenal' => $line->salario_base_quincenal,
              ':horas_extra' => $line->horas_extra,
              ':feriados' => $line->feriados,
              ':ccss_extraordinario' => $line->ccss_extraordinario,
              ':total_pagado_extraordinario' => $line->total_pagado_extraordinario,
              ':tipo_comprobante' => 2,
              ':estado' => 1
          );  // $map

          $sql = 'UPDATE coel_periodo_detalle SET
          coel_periodo_id = :coel_periodo_id,
          primer_apellido = :primer_apellido,
          segundo_apellido = :segundo_apellido,
          nombre = :nombre,
          cedula = :cedula,
          correo_electronico = :correo_electronico,
          salario_base_quincenal = :salario_base_quincenal,
          horas_extra = :horas_extra,
          feriados = :feriados,
          ccss_extraordinario = :ccss_extraordinario,
          total_pagado_extraordinario = :total_pagado_extraordinario,

          tipo_comprobante = :tipo_comprobante,
          estado = :estado
          WHERE cedula = :cedula and coel_periodo_id = :coel_periodo_id';

          $query = db_query($sql,$map);

          // Localizar ID de empleado para agregar el comprobante B
          $sql = 'SELECT * FROM coel_periodo_detalle WHERE cedula = :cedula and coel_periodo_id = :coel_periodo_id';
          $fields = array(':cedula' => $line->cedula,':coel_periodo_id' => $last_insert_id);
          $result = db_query($sql,$fields);

          $record = $result->fetchObject();
          $id_empleado = $record->coel_periodo_detalle_id;
          $path_empleado = $path_periodo.'/'.$id_empleado;

          // Escribiendo el PDF generado
          file_put_contents($path_empleado.'/comprobante-pago-extras.pdf',coel_import_comprobante_pdf(1, $line));

      }

    return array(
      '#markup' => '<p>El archivo ha sido cargado correctamente</p>'
    );
  }
}

function coel_import_comprobante_pdf($type, $data) {

    switch ($type) {
        case 0:
            $html = '
            <table width="100%" style="border:solid 1px #000000;" cellpadding="5" cellspacing="0">
                <tr>
                    <th colspan="6" style="background-color: #dddddd;"><h1>COMPROBANTE DE PAGO DE SALARIO</h1><p>Para consultas sobre el pago unicamente en oficinas de L-V 8am-4pm</p></th>
                </tr>
                <tr>
                    <th>Nombre completo</th>
                    <td colspan="3">'.$data->primer_apellido.' '.$data->segundo_apellido.' '.$data->nombre.'</td>
                    <th>Fecha:</th>
                    <td>'.date('d-m-Y').'</td>
                </tr>
                <tr>
                    <th>Salario Base Mensual</th>
                    <td>&nbsp;</td>
                    <td>'.($data->salario_base_quincenal * 2).'</td>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <th>&nbsp;</th>
                    <td colspan="3">&nbsp;</td>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <th>Salario Base Quincenal</th>
                    <td>-</td>
                    <td>'.$data->salario_base_quincenal.'</td>
                    <th>CCSS:</th>
                    <td>-</td>
                    <td>'.$data->ccss.'</td>
                </tr>
                <tr>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <th>PrÃ©stamo:</th>
                    <td>-</td>
                    <td>'.$data->prestamo.'</td>
                </tr>
                <tr>
                    <th>DÃ­as laborados</th>
                    <td>-</td>
                    <td>'.$data->dias_laborados.'</td>
                    <th>Adelanto de salario:</th>
                    <td>-</td>
                    <td>'.$data->adelanto_salario.'</td>
                </tr>
                <tr>
                    <th>Total salario:</th>
                    <td>-</td>
                    <td>'.$data->total_salario.'</td>
                    <th>Embargos:</th>
                    <td>-</td>
                    <td>'.$data->embargos.'</td>
                </tr>
                <tr>
                    <td colspan="6">&nbsp;</td>
                </tr>
                <tr>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <th><h2>Total a pagar</h2></th>
                    <td>-</td>
                    <td>'.$data->total_pagado.'</td>
                </tr>
                <tr>
                    <th colspan="6" align="center" style="background-color:#cccccc;">Recordar que unicamente planilla puede evacuar las dudas que tengan sobre el comprobante o pago</th>
                </tr>



            </table>
            ';
            break;
        case 1:
            $html = '
            <table width="100%" style="border:solid 1px #000000;" cellpadding="5" cellspacing="0">
                <tr>
                    <th colspan="6" style="background-color: #dddddd;"><h1>COMPROBANTE DE PAGO DE HORAS EXTRAS</h1><p>Para consultas sobre el pago unicamente en oficinas de L-V 8am-4pm</p></th>
                </tr>
                <tr>
                    <th>Nombre completo</th>
                    <td colspan="3">'.$data->primer_apellido.' '.$data->segundo_apellido.' '.$data->nombre.'</td>
                    <th>Fecha:</th>
                    <td>'.date('d-m-Y').'</td>
                </tr>
                <tr>
                    <th>Salario Base Mensual</th>
                    <td>&nbsp;</td>
                    <td>'.($data->salario_base_quincenal * 2).'</td>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <th>&nbsp;</th>
                    <td colspan="3">&nbsp;</td>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <th>Horas extras:</th>
                    <td>-</td>
                    <td>'.$data->horas_extra.'</td>
                    <th>CCSS:</th>
                    <td>-</td>
                    <td>'.$data->ccss_extraordinario.'</td>
                </tr>
                <tr>
                    <th>Feriado:</th>
                    <td>-</td>
                    <td>'.$data->feriados.'</td>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <th>&nbsp;</th>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <th><h2>Total a pagar</h2></th>
                    <td>-</td>
                    <td>'.$data->total_pagado_extraordinario.'</td>
                </tr>
                <tr>
                    <th colspan="6" align="center" style="background-color:#cccccc;">Recordar que unicamente planilla puede evacuar las dudas que tengan sobre el comprobante o pago</th>
                </tr>



            </table>
            ';

            break;
    }

    // Never make an instance of TCPDF or TCPDFDrupal classes manually.
    // Use tcpdf_get_instance() instead.
    $tcpdf = tcpdf_get_instance();
    /* DrupalInitialize() is an extra method added to TCPDFDrupal that initializes
    *  some TCPDF variables (like font types), and makes possible to change the
    *  default header or footer without creating a new class.
    */

    $theme_settings = variable_get('theme_' . variable_get('theme_default', '') . '_settings', '');
    if (isset($theme_settings['logo_path']) && (file_exists($theme_settings['logo_path']))) {
        $tcpdf->Image(drupal_realpath($theme_settings['logo_path']), '', '', '', '', '', variable_get('site_url', ''), '', TRUE, 150, '', FALSE, FALSE, 0, FALSE, FALSE, FALSE);
    }

    $tcpdf->DrupalInitialize(array(
        'footer' => array(
            'html' => 'Comprobante generado el '.date('d/m/Y H:i:s').'.',
        ),
        'header' => array(
            'html' => 'Sistema de Comprobante ElectrÃ³nico (COEL)'
            /*
            'callback' => array(
                'function' => 'coel_import_default_header',
                // You can pass extra data to your callback.
                'context' => array(
                    'welcome_message' => 'Hello, context array!',
                ),
            ),
            */
        ),
    ));

    // Insert the content. Note that DrupalInitialize automaticly adds the first
    // page to the pdf document.
    $tcpdf->writeHTML($html);

    return $tcpdf->Output('', 'S');
}


/**
 * Constructs a simple page.
 *
 * The simple page callback, mapped to the path 'examples/page_example/simple'.
 *
 * Page callbacks return a renderable array with the content area of the page.
 * The theme system will later render and surround the content in the
 * appropriate blocks, navigation, and styling.
 *
 * If you do not want to use the theme system (for example for outputting an
 * image or XML), you should print the content yourself and not return anything.
 */
function coel_import_send() {
    // We are going to output the results in a table with a nice header.
    $header = array(
        // The header gives the table the information it needs in order to make
        // the query calls for ordering. TableSort uses the field information
        // to know what database column to sort by.
        array('data' => t('ID'), 'field' => 't.id_periodo'),
        array('data' => t('Nombre'), 'field' => 't.nombre'),
        array('data' => t('Opciones')),
    );

    // Using the TableSort Extender is what tells the query object that we are
    // sorting.
    $query = db_select('coel_periodo', 't')
        ->extend('TableSort');
    $query->fields('t');

    // Don't forget to tell the query object how to find the header information.
    $result = $query
        ->orderByHeader($header)
        ->execute();

    $rows = array();
    foreach ($result as $row) {
        // Normally we would add some nice formatting to our rows
        // but for our purpose we are simply going to add our row
        // to the array.
        $row->opciones = '<a href="/coel/send/'.$row->id_periodo.'">Enviar</a>';
        //echo '<pre>'.print_r($row,true).'</pre>';
        //exit;
        //$row['opciones'] = 'Enviar';
        $rows[] = array('data' => (array) $row);
    }

    // Build the table for the nice output.
    $build['tablesort_table'] = array(
        '#theme' => 'table',
        '#header' => $header,
        '#rows' => $rows,
    );

    return $build;
  //return array('#markup' => '<p>' . t('Listado de periodos.') . '</p>');
}

/**
 * A more complex page callback that takes arguments.
 *
 * This callback is mapped to the path 'examples/page_example/arguments/%/%'.
 *
 * The % arguments are passed in from the page URL. In our hook_menu
 * implementation we instructed the menu system to extract the last two
 * parameters of the path and pass them to this function as arguments.
 *
 * This function also demonstrates a more complex render array in the returned
 * values. Instead of just rendering the HTML with a theme('item_list'), the
 * list is left unrendered, and a #theme attached to it so that it can be
 * rendered as late as possible, giving more parts of the system a chance to
 * change it if necessary.
 *
 * Consult @link http://drupal.org/node/930760 Render Arrays documentation
 * @endlink for details.
 */
function coel_import_send_mail($id_periodo) {
  // Make sure you don't trust the URL to be safe! Always check for exploits.
  if (!is_numeric($id_periodo)) {
    // We will just show a standard "access denied" page in this case.
    drupal_access_denied();
    // We actually don't get here.
    return;
  }

  $sql = 'SELECT * FROM coel_periodo_detalle WHERE coel_periodo_id = :coel_periodo_id and estado = 1';
  $fields = array(':coel_periodo_id' => $id_periodo);
  $result = db_query($sql,$fields);
  $uploads_dir = variable_get('file_public_path', conf_path() . '/files');


    while ($record = $result->fetchObject()){

      // Si no existe una direcciÃ³n de correo electrÃ³nico se omite el envÃ­o del mensaje
      if ($record->correo_electronico == ''){
          continue;
      }

      $from = variable_get('site_mail', 'testing@cms77.com');
      $to = $record->correo_electronico;
      $subject = 'Comprobante de pago';
      $body = 'Estimado(a) '.$record->nombre.' '.$record->primer_apellido.' '.$record->segundo_apellido.':'.PHP_EOL.PHP_EOL;
      $body .= 'Adjunto a este mensaje se encuentra su comprobante de pago.'.PHP_EOL.PHP_EOL;
      $body .= 'Atentamente,'.PHP_EOL.PHP_EOL;
      $body .= variable_get('site_name', '').PHP_EOL;
      $body .= variable_get('site_slogan', '').PHP_EOL.PHP_EOL;
      if ($record->tipo_comprobante == 2) {
          $attachment = array(
              array('filepath' => $uploads_dir . '/comprobantes/' . $id_periodo . '/' . $record->coel_periodo_detalle_id . '/comprobante-pago.pdf'),
              array('filepath' => $uploads_dir . '/comprobantes/' . $id_periodo . '/' . $record->coel_periodo_detalle_id . '/comprobante-pago-extras.pdf'),
          );
      }
      else {
          $attachment = array(
              array('filepath' => $uploads_dir . '/comprobantes/' . $id_periodo . '/' . $record->coel_periodo_detalle_id . '/comprobante-pago.pdf'),
          );
      }

      $params = array(
         'key' => 'my_email_template',
         'to' => $to,
         'from' => $from,
         'subject' => $subject,
         'body' => $body,
         'attachment' => $attachment
      );
      drupal_mail('coel_import','my_email_template',$to,'en',$params,$from);
  }

  return array('#markup' => "<h2>Todos los comprobantes fueron enviados por email</h2>");
}

/**
 * Implements hook_mail().
 */
function coel_import_mail($key, &$message, $params) {
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['body'];

    // Add attachment when available.
    if (isset($params['attachment'])) {
        $message['params']['attachments'] = $params['attachment'];
    }
}

